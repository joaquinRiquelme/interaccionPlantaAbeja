---
title: "Actualización de base de datos interacción planta-abeja"
author: "Katherine Collao, Joaquin Riquelme, Maureen Murúa"
format: html
editor: visual
---

## Contexto

Se actualiza la base de datos de proyecto de investigacion de interaccion entre plantas y abejas.

Se utiliza como base la estructura de base de datos provista en .....

```{r base}
library("tidyverse")
library("writexl")
library("taxize")

# base_datos <- list()
base_datos <- readRDS("base_datos.RDS")

```

## Matrices bipartitas en formato ancho y largo

```{r mbipartitas}

matriz.general <-  readxl::read_excel("Matriz_general.xlsx", sheet = 1, skip = 1)[,-1]
fuentes <- unique(matriz.general$ID)
fuentes <- substr(x = fuentes, start = regexpr(pattern = "_", text = fuentes)+1,  stop = nchar(fuentes))
fuentes[fuentes=="Kahe"] <- "074"
fuentes[fuentes=="kbcontrol2009"] <- "075"
fuentes[fuentes=="2010"] <- "076"
fuentes[fuentes=="Var2012"] <- "077"

fuentes <- fuentes[fuentes!="chaco0611"]
fuentes <- fuentes[fuentes!="kbrest2009"]
fuentes <- fuentes[fuentes!="res_1521"]

fuentes.carpetas <- list.files(path = "datosOriginales/")
fuentes.carpetas.id <- substr(fuentes.carpetas, 1, regexpr(pattern = "_", text = fuentes.carpetas)-1)

# fuentes que estan en la martriz pero no en las carpetas
setdiff(fuentes, fuentes.carpetas.id)

# fuentes que estan en las carpetas pero no en la martriz 
setdiff(fuentes.carpetas.id, fuentes)

for(fuentes.i in fuentes){
  file.fuente <- list.files("datosOriginales/")[
    grep(pattern = fuentes.i, 
         substr(x = list.files("datosOriginales/"), 1,5))]
  print(file.fuente)
  
  archivos <- list.files(paste("datosOriginales/",file.fuente,sep=""))
  
  archivos.csv <- archivos[grep(pattern = ".csv", x = archivos)]
  if(length(grep(pattern = "specie", x = archivos.csv)) > 0 ){
    archivos.csv <- archivos.csv[-grep(pattern = "specie", x = archivos.csv)]}
  archivo.csv.i <- archivos.csv[grep(pattern = fuentes.i, x = archivos.csv)]
  
  matriz.i <- read.csv(file.path("datosOriginales/",file.fuente,archivo.csv.i))
  matriz.i2 <- read.csv2(file.path("datosOriginales/",file.fuente,archivo.csv.i))
  
  if(ncol(matriz.i)>1){matriz.ancha.i <- matriz.i}
  if(ncol(matriz.i)==1){matriz.ancha.i <- matriz.i2}
  
  names(matriz.ancha.i)[1] <- "plantas"
  matriz.ancha.i$plantas <- gsub(pattern = " ", replacement = ".", x = matriz.ancha.i$plantas) 
  matriz.ancha.i$plantas <- gsub(pattern = "_", replacement = ".", x = matriz.ancha.i$plantas) 
  
  nombres.nuevos <- names(matriz.ancha.i)
  nombres.nuevos <- gsub(pattern = " ", replacement = ".", x = nombres.nuevos)
  nombres.nuevos <- gsub(pattern = "_", replacement = ".", x = nombres.nuevos)
  
  for(nombre.i in nombres.nuevos){
    if(substr(nombre.i, nchar(nombre.i), nchar(nombre.i))=="."){
      nombres.nuevos[nombres.nuevos==nombre.i] <- substr(nombre.i, 1, nchar(nombre.i)-1)
    }
    }
  
  names(matriz.ancha.i) <- nombres.nuevos
  
  base_datos[[paste("matriz_ancha",fuentes.i,sep=".")]] <- matriz.ancha.i
  write.csv(matriz.ancha.i, file = paste("tablas/matriz_ancha",fuentes.i,"csv",sep="."), row.names = FALSE)
  
  matriz.ancha.i <- cbind(ID = paste("M", fuentes.i, sep="_"), matriz.ancha.i)
  
  matriz.larga.i <- data.frame(
    matriz.ancha.i |> 
      group_by(ID, plantas) |> 
      pivot_longer(cols = names(matriz.ancha.i)[3:ncol(matriz.ancha.i)],
                   values_to = "interaccion",
                   names_to = "especie"))
  
  base_datos[[paste("matriz_larga", fuentes.i,sep=".")]] <- matriz.larga.i
  write.csv(matriz.larga.i, file = paste("tablas/matriz_larga",fuentes.i,"csv",sep="."), row.names = FALSE)
  
  # if(isTRUE(file.fuente)){
    # files.csv <- grep(pattern = ".csv",
                     # x = list.files(paste("datosOriginales/",file.fuente,sep="")))
  # }
  
}

head(base_datos$matriz_ancha.001)
head(base_datos$matriz_larga.001)


# creacion de una sola matriz en formato largo con todas las fuentes de datos
matrices.largas <- list.files(path = "tablas/", pattern = "matriz_larga")

matriz_comp_larga <- c()
for(m.i in matrices.largas){
  print(m.i)
  matriz_comp_larga <- rbind(matriz_comp_larga, read.csv(file = file.path("tablas",m.i)))
}

head(matriz_comp_larga)
unique(matriz_comp_larga$ID)
table(matriz_comp_larga$ID)
length(unique(matriz_comp_larga$plantas))
length(unique(matriz_comp_larga$especie))
hist(log(log(matriz_comp_larga$interaccion)))


base_datos$matriz_comp_larga <- matriz_comp_larga
write.csv(matriz_comp_larga, file = paste("tablas/matriz_comp_larga","csv",sep="."), row.names = FALSE)

```



## Especies

La tabla especie se poblará a partir de los valores únicos de la matriz larga que contiene todas las fuentes de datos.

```{r especies}
matriz_comp_larga <- base_datos$matriz_comp_larga
head(matriz_comp_larga)

unique(matriz_comp_larga$especie)
matriz_comp_larga$genero <- substr(matriz_comp_larga$especie, start = 1, stop = regexpr(pattern = ".", text = matriz_comp_larga$especie, fixed = TRUE)-1)

matriz_comp_larga$genero.plantas <- substr(matriz_comp_larga$plantas, start = 1, stop = regexpr(pattern = ".", text = matriz_comp_larga$plantas, fixed = TRUE)-1)

especies <- unique(matriz_comp_larga[c("genero","especie")])
plantas <- unique(matriz_comp_larga[c("genero.plantas","plantas")])

head(especies)
head(plantas)
# especies$especie = substr(especies$Abeja,start = 1, stop = nchar(as.character(especies$Abeja))-5)
sort(unique(especies$especie))
sort(unique(plantas$plantas))

# data.frame(aaa$`Apis mellifera`) |> pivot_wider()

vector.generos <- sort(unique(especies$genero))
vector.generos <- vector.generos[vector.generos!=""]

# vector.generos1 <- vector.generos[1:20]
# vector.generos500 <- vector.generos[1:500]
# vector.generos1000 <- vector.generos[501:1000]
# vector.generos1500 <- vector.generos[1001:1500]
# vector.generos2000 <- vector.generos[1501:2000]
# vector.generos2347 <- vector.generos[2001:2347]


ids.gbif <- get_gbifid_(vector.generos); beepr::beep(sound=8)
# ids.gbif500 <- get_gbifid_(vector.generos500); beepr::beep(sound=8)
# ids.gbif1000 <- get_gbifid_(vector.generos1000); beepr::beep(sound=8)
# ids.gbif1500 <- get_gbifid_(vector.generos1500); beepr::beep(sound=8)
# ids.gbif2000 <- get_gbifid_(vector.generos2000); beepr::beep(sound=8)
# ids.gbif2347 <- get_gbifid_(vector.generos2347); beepr::beep(sound=8)

# ids.gbif.todas <- list(ids.gbif500, ids.gbif1000, ids.gbif1500, ids.gbif2000, ids.gbif2347)


# registro sin familia, se elimina por ahora
ids.gbif <- ids.gbif[-1574]
ids.gbif
list.generos <- lapply(ids.gbif, function(x){
  x <- data.frame(x)
  if(nrow(x)>1){
  x2 <- x[ x$kingdom=="Animalia" &
             x$phylum=="Arthropoda" &
             # x$status =="ACCEPTED" &
             !is.na(x$genus) & !is.na(x$family) & 
             !is.na(x$order)& x$rank != "kingdom",]
  x2 <- x2[1,]
  
  if(is.element("order", names(x2)) &
     is.element("family", names(x2)) & 
     is.element("genus", names(x2))){
    
  x3 <- unique(x2[,c("order","family","genus")])
  x3
  }
  
           }
  
  #names(x)[1])
  

  })


tabla.generos <- do.call(rbind, list.generos)

table(tabla.generos$order)
table(tabla.generos$family)
table(tabla.generos$genus)
tabla.generos <- unique(tabla.generos)

esp2 <- merge(especies, tabla.generos, by.x="genero", by.y="genus", all.x=TRUE)
table(esp2$order)
# table(esp2$family)
subset(esp2, is.na(family))

esp3 <- unique(esp2)
sum(is.na(esp3$family))
names(base_datos$especies)
names(esp3) <- c("genero","especie","orden","familia")

base_datos$especies <- rbind(base_datos$especies, esp3)
str(base_datos$especies)
head(base_datos$especies)

write.csv(base_datos$especies, "tablas/especies.csv", row.names = FALSE)

# ```{r especies2}

# gbif_name_usage("Apis", data = "gbif", )
# lista.genero <- taxize::classification(vector.generos1, db = "gbif", rows = NA)
# lista.genero <- taxize::classification(vector.generos1[2], db = "gbif")
# lalapply <- lapply(lista.genero,
#        FUN = function(x){
#          if(is.data.frame(x)){
#            data.l <- data.frame(x[x[,"rank"] %in% c("order", "family", "genus"),c("name","rank")])
#            
#            
#            if(nrow(data.l)>2){
#              
#            # if(is.na(data.l)){stop}
#            data.f <- data.frame(orden=data.l[data.l$rank=="order","name"],
#                                 familia=data.l[data.l$rank=="family","name"],
#                                 genero=data.l[data.l$rank=="genus","name"])
#            data.f
#            
#            }
#            
#            # data.l2 <- data.frame(orden = as.character(data.l[data.l[,"rank"] %in% c("order"), "name"]))#,
#            # data.l3 <- data.frame(familia = as.character(data.l[data.l[,"rank"] %in% c("family"), "name"]))#,
#            # data.l4 <- data.frame(genero = as.character(data.l[data.l[,"rank"] %in% c("genus"), "name"]))#,
#              # familia = as.character(data.l[data.l[,"rank"] %in% c("family"), "name"]),
#              # genero = as.character(data.l[data.l[,"rank"] %in% c("genus"), "name"])
#            # )
#            
#            # cbind(data.l2,data.l3,data.l4)
#              }
#          }
#        )
# tabla.generos <- do.call(rbind, lalapply)
# 
# table(tabla.generos$familia)

# 
# matriz.general$genero <- substr(matriz.general$Abeja, 
#                                 start = 1, 
#                                 stop = regexpr(pattern = ".", text = matriz.general$Abeja, fixed = TRUE)-1)
# head(matriz.general)
# aaa <- unique(matriz.general[,c("Familia","genero","Abeja")])
# esp3.na <- subset(esp3, is.na(familia))
# especies.fallo <- unique(esp3.na$especie)
# 
# matriz.general$especies <- gsub(pattern = " ", replacement = ".", x = matriz.general$Abeja)
# matriz.general$especies <- substr(x = matriz.general$especies, 
#                                   start = 1, 
#                                   stop = regexpr(pattern = "_", text = matriz.general$especies, fixed = TRUE)-1)
# matriz.general$especies <- gsub(pattern = "_", replacement = ".", x = matriz.general$especies)
# 
# intersect(especies.fallo, matriz.general$especies)


```


## Rasgos 
```{r rasgos}
matriz.general$genero <- substr(matriz.general$Abeja, 
                                start = 1,
                                stop = regexpr(pattern = ".", text = matriz.general$Abeja, fixed = TRUE)-1)
matriz.general$especies <- gsub(pattern = " ", replacement = ".", x = matriz.general$Abeja)
matriz.general$especies <- substr(x = matriz.general$especies,
                                  start = 1,
                                  stop = regexpr(pattern = "_", text = matriz.general$especies, fixed = TRUE)-1)
matriz.general$especies <- gsub(pattern = "_", replacement = ".", x = matriz.general$especies)

head(matriz.general)

rasgos.abejas <- unique(matriz.general[,c("ID","Abeja","especies","genero","Familia","DIT","Grado","Grado relativo", "z_Grado")])

base_datos$rasgos <- rasgos.abejas
write.csv(rasgos.abejas, file = file.path("tablas","rasgos.abejas.csv"),row.names = FALSE)
```


### DIT
```{r DIT}
DIT <- rasgos.abejas[!is.na(rasgos.abejas$DIT),c("ID","Abeja","especies","genero","Familia","DIT")]
base_datos$DIT <- DIT
write.csv(DIT, file = file.path("tablas","DIT.csv"),row.names = FALSE)

```


### G
```{r G}
G <- rasgos.abejas[!is.na(rasgos.abejas$Grado),c("ID","Abeja","especies","genero","Familia","Grado","Grado relativo", "z_Grado")]
base_datos$G <- G
write.csv(G, file = file.path("tablas","G.csv"),row.names = FALSE)

```


## Ubicacion geografica
```{r ubicacion}
ubicacion.geografica <- unique(matriz.general[,c("ID","Localidad","Latitud","Longitud")])
plot(ubicacion$Longitud,ubicacion$Latitud)

base_datos$ubicacion.geografica <- ubicacion
write.csv(ubicacion.geografica, file = file.path("tablas","ubicacion.geografica.csv"),row.names = FALSE)

```

## Guardar

```{r guardar}

saveRDS(base_datos, file = "base_datos.RDS")

base_datos$matriz_comp_larga <- NULL

writexl::write_xlsx(base_datos, path = "base_datos.xlsx")

```

