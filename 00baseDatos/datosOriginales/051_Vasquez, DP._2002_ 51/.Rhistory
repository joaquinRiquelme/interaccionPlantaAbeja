M_PL_051 <- read.csv("C:/Users/kcoll/Desktop/Tesis -Cap 1/1.0 TESIS/1. Capitulo 1 -redes/Bases de Datos - Redes agregadas/Vasquez, DP._2002_ 51/M_PL_051.csv", header=FALSE)
View(M_PL_051)
View(M_PL_051)
Barrett_1967 <- read.csv("C:/Users/kcoll/Desktop/Trabajo con redes -agregadas/Redes Limpias - DIT/Barrett_1967.csv", sep=";")
View(Barrett_1967)
# Cargar librerías necesarias
library(dplyr)  # Para manipulación de datos
library(vegan)  # Para calcular el índice de Shannon
# Leer los datos desde un archivo CSV
df <- read.csv("C:/Users/elias/OneDrive/Escritorio/KAthy_arreglo/Matriz de interaccion_Bezerra_2009.csv", sep = ";")
# Leer los datos desde un archivo CSV
df <- read.csv("C:/Users/kcoll/Desktop/Trabajo con redes -agregadas/Redes Limpias - DIT/Barrett_1967.csv", sep = ";")
# Convertir la primera columna en nombres de fila para evitar que se trate como una columna de texto
rownames(df) <- df[,1]
df <- df[,-1]  # Eliminar la primera columna ahora que está en rownames
# Sumar las columnas (suma vertical: total de interacciones por abeja)
suma_vertical <- colSums(df, na.rm = TRUE)
# Sumar las filas (suma horizontal: total de interacciones por flor)
suma_horizontal <- rowSums(df, na.rm = TRUE)
# Agregar la suma total de filas al data frame original con el nombre "suma_horizontal"
df$suma_horizontal <- suma_horizontal
# Crear una nueva fila con la suma total de columnas y nombrarla "suma_vertical"
df <- rbind(df, c(suma_vertical, sum(suma_horizontal)))
# Renombrar la fila agregada como "suma_vertical"
rownames(df)[nrow(df)] <- "suma_vertical"
# Mostrar el dataframe con las sumas
print(df)
# Crear una copia del dataframe sin la fila "suma_vertical"
df_sin_total <- df[-nrow(df),]
# Extraer la columna de sumas horizontales asegurando que sean valores numéricos
suma_horizontal <- as.numeric(df_sin_total$suma_horizontal)
# Reemplazar valores donde suma_horizontal es 0 para evitar divisiones por cero
suma_horizontal[suma_horizontal == 0] <- NA
# Crear el dataframe de proporciones dividiendo cada valor por su respectiva suma horizontal
df_horizontal <- df_sin_total
df_horizontal[,-ncol(df)] <- sweep(as.matrix(df_sin_total[,-ncol(df_sin_total)]), 1, suma_horizontal, "/")
# Restaurar los nombres de filas y columnas
rownames(df_horizontal) <- rownames(df_sin_total)
# Mostrar el resultado
print(df_horizontal)
# Crear una copia del dataframe sin la fila "suma_vertical"
df_sin_total <- df[-nrow(df),]
# Eliminar la columna "suma_horizontal" antes de calcular la proporción vertical
df_sin_total <- df_sin_total[, -ncol(df_sin_total)]
# Extraer los valores de la fila "suma_vertical" para usarlos como totales de cada columna
suma_vertical_vector <- df[nrow(df), -ncol(df)]  # Excluir la columna "suma_horizontal"
# Convertir a valores numéricos
suma_vertical_vector <- as.numeric(suma_vertical_vector)
# Calcular la proporción de cada valor dividiéndolo por su respectiva suma vertical
df_vertical <- df_sin_total
df_vertical[,] <- sweep(as.matrix(df_sin_total), 2, suma_vertical_vector, "/")
# Restaurar los nombres de filas y columnas
rownames(df_vertical) <- rownames(df_sin_total)
# Mostrar el resultado
print(df_vertical)
# Eliminar la fila "suma_vertical" y la columna "suma_horizontal"
df_sin_totales <- df[-nrow(df), -ncol(df)]
# Convertir a formato numérico
df_sin_totales <- as.matrix(df_sin_totales)  # Convertir a matriz para cálculos
df_sin_totales <- apply(df_sin_totales, 2, as.numeric)  # Asegurar datos numéricos
# **Índice de Shannon Global (para toda la matriz)**
shannon_global <- diversity(as.vector(df_sin_totales), index = "shannon")
# **Índice de Shannon por columna (por especie de abeja)**
shannon_por_columna <- diversity(df_sin_totales, index = "shannon", MARGIN = 2)
# **Crear un dataframe con el índice de Shannon Global**
df_shannon_global <- data.frame(Métrica = "Shannon Global", Valor = shannon_global)
# **Crear un dataframe con el índice de Shannon por columna (por especie de abeja)**
df_shannon_columnas <- data.frame(Especie_Abeja = names(shannon_por_columna), Shannon_Valor = shannon_por_columna)
# **Mostrar los dataframes de Shannon**
print("Índice de Shannon Global:")
print(df_shannon_global)
print("Índice de Shannon por columna:")
View(df)
View(df_horizontal)
View(df_horizontal)
View(df_shannon_columnas)
View(df_shannon_columnas)
View(df_shannon_global)
View(df_sin_total)
View(df_sin_total)
View(df_sin_totales)
View(df_vertical)
View(M_PL_051)
View(Barrett_1967)
View(df)
View(df)
View(df_horizontal)
View(df_horizontal)
View(df_horizontal)
View(Barrett_1967)
Barrett_1967 <- read.csv("C:/Users/kcoll/Desktop/Trabajo con redes -agregadas/Redes Limpias - DIT/Barrett_1967.csv", sep=";")
View(Barrett_1967)
# Cargar librerías necesarias
library(dplyr)  # Para manipulación de datos
library(vegan)  # Para calcular el índice de Shannon
# Leer los datos desde un archivo CSV
df <- read.csv("C:/Users/kcoll/Desktop/Trabajo con redes -agregadas/Redes Limpias - DIT/Barrett_1967.csv", sep = ";")
# Convertir la primera columna en nombres de fila para evitar que se trate como una columna de texto
rownames(df) <- df[,1]
df <- df[,-1]  # Eliminar la primera columna ahora que está en rownames
# Sumar las columnas (suma vertical: total de interacciones por abeja)
suma_vertical <- colSums(df, na.rm = TRUE)
# Sumar las filas (suma horizontal: total de interacciones por flor)
suma_horizontal <- rowSums(df, na.rm = TRUE)
# Agregar la suma total de filas al data frame original con el nombre "suma_horizontal"
df$suma_horizontal <- suma_horizontal
# Crear una nueva fila con la suma total de columnas y nombrarla "suma_vertical"
df <- rbind(df, c(suma_vertical, sum(suma_horizontal)))
# Renombrar la fila agregada como "suma_vertical"
rownames(df)[nrow(df)] <- "suma_vertical"
# Mostrar el dataframe con las sumas
print(df)
# Crear una copia del dataframe sin la fila "suma_vertical"
df_sin_total <- df[-nrow(df),]
# Extraer la columna de sumas horizontales asegurando que sean valores numéricos
suma_horizontal <- as.numeric(df_sin_total$suma_horizontal)
# Reemplazar valores donde suma_horizontal es 0 para evitar divisiones por cero
suma_horizontal[suma_horizontal == 0] <- NA
# Crear el dataframe de proporciones dividiendo cada valor por su respectiva suma horizontal
df_horizontal <- df_sin_total
df_horizontal[,-ncol(df)] <- sweep(as.matrix(df_sin_total[,-ncol(df_sin_total)]), 1, suma_horizontal, "/")
# Restaurar los nombres de filas y columnas
rownames(df_horizontal) <- rownames(df_sin_total)
# Mostrar el resultado
print(df_horizontal)
# Crear una copia del dataframe sin la fila "suma_vertical"
df_sin_total <- df[-nrow(df),]
View(df_horizontal)
View(df_horizontal)
View(df_sin_total)
View(df_sin_total)
# Eliminar la columna "suma_horizontal" antes de calcular la proporción vertical
df_sin_total <- df_sin_total[, -ncol(df_sin_total)]
# Extraer los valores de la fila "suma_vertical" para usarlos como totales de cada columna
suma_vertical_vector <- df[nrow(df), -ncol(df)]  # Excluir la columna "suma_horizontal"
# Convertir a valores numéricos
suma_vertical_vector <- as.numeric(suma_vertical_vector)
# Calcular la proporción de cada valor dividiéndolo por su respectiva suma vertical
df_vertical <- df_sin_total
df_vertical[,] <- sweep(as.matrix(df_sin_total), 2, suma_vertical_vector, "/")
# Restaurar los nombres de filas y columnas
rownames(df_vertical) <- rownames(df_sin_total)
# Mostrar el resultado
print(df_vertical)
# Eliminar la fila "suma_vertical" y la columna "suma_horizontal"
df_sin_totales <- df[-nrow(df), -ncol(df)]
# Convertir a formato numérico
df_sin_totales <- as.matrix(df_sin_totales)  # Convertir a matriz para cálculos
df_sin_totales <- apply(df_sin_totales, 2, as.numeric)  # Asegurar datos numéricos
# **Índice de Shannon Global (para toda la matriz)**
shannon_global <- diversity(as.vector(df_sin_totales), index = "shannon")
# **Índice de Shannon por columna (por especie de abeja)**
shannon_por_columna <- diversity(df_sin_totales, index = "shannon", MARGIN = 2)
# **Crear un dataframe con el índice de Shannon Global**
df_shannon_global <- data.frame(Métrica = "Shannon Global", Valor = shannon_global)
# **Crear un dataframe con el índice de Shannon por columna (por especie de abeja)**
df_shannon_columnas <- data.frame(Especie_Abeja = names(shannon_por_columna), Shannon_Valor = shannon_por_columna)
# **Mostrar los dataframes de Shannon**
print("Índice de Shannon Global:")
print(df_shannon_global)
print("Índice de Shannon por columna:")
View(df_vertical)
View(df_sin_totales)
View(df_sin_total)
View(df_shannon_global)
View(df_horizontal)
View(Barrett_1967)
